---
title: "PS2_NSW"
format: pdf
editor: visual
---

```{r}
options(crayon.enabled = FALSE) # suppress colorised warnings to be displayed correctly
gc() # garbage collection
rm(list = ls()) # clear variables
```

```{r}
library(tidyverse)
library(haven)
library(modelsummary)
library(broom)
library(patchwork)
```

# Question 1

## a

```{r}
experimental <- read_dta("https://users.nber.org/~rdehejia/data/nsw_dw.dta")
```

## b

```{r}
experimental <- experimental |>
  rename(earnings74 = re74, earnings75 = re75, earnings78 = re78)
```

## c

```{r}
experimental <- experimental |>
  mutate(race = case_when(
    black == 1 ~ "black",
    hispanic == 1 ~ "hispanic",
    .default = "white"
  ))
```

## d

```{r}
experimental <- experimental |>
  mutate(
    treat = ifelse(treat == 1, "treated", "control"),
    degree = ifelse(nodegree == 0, "highshcool or above", "no highschool"),
    marriage = ifelse(married == 1, "married", "unmarried")
  )
```

## e

```{r}
experimental <- experimental |>
  mutate(
    employment74 = ifelse(earnings74 == 0, "unemployed", "employed"),
    employment75 = ifelse(earnings75 == 0, "unemployed", "employed"),
    employment78 = ifelse(earnings78 == 0, "unemployed", "employed")
  )
```

## e

```{r}
experimental <- experimental |>
  select(-black, -hispanic, -nodegree, -married, -data_id)
```

## ex

```{r}
cleanup <- function(data) {
  
  data <- data |>
  rename(earnings74 = re74, earnings75 = re75, earnings78 = re78)
  
  data <- data |>
  mutate(race = case_when(
    black == 1 ~ "black",
    hispanic == 1 ~ "hispanic",
    .default = "white"
  ))
  
  data <- data |>
  mutate(
    treat = ifelse(treat == 1, "treated", "control"),
    degree = ifelse(nodegree == 0, "highshcool or above", "no highschool"),
    marriage = ifelse(married == 1, "married", "unmarried")
  )
  
  data <- data |>
  mutate(
    employment74 = ifelse(earnings74 == 0, "unemployed", "employed"),
    employment75 = ifelse(earnings75 == 0, "unemployed", "employed"),
    employment78 = ifelse(earnings78 == 0, "unemployed", "employed")
  )
  
  data <- data |>
  select(-black, -hispanic, -nodegree, -married, -data_id)
  
  data
}
```

# Question 2

## a

```{r}
experimental |>
  select(is.double) |>
  datasummary_skim()
```

```{r}
experimental |>
  select(is.character) |>
  datasummary_skim()
```

## b

```{r}
experimental |>
  datasummary_balance(~ treat, data = _)
```

Characteristics are balanced, but observations are unbalanced.

## c

```{r}
experimental_result <- experimental |>
  mutate(employed78 = ifelse(employment78 == "employed", 1, 0)) |>
  group_by(treat) |>
  summarise(empRate78 = mean(employed78), sd = sd(employed78), obs = n())

experimental_result
```

$$
SE(\hat{ATE}) = \sqrt{\frac{SE(\bar{Y}_\text{treat})^2}{n_\text{treat}} + \frac{SE(\bar{Y}_\text{control})^2}{n_\text{control}}}
$$

```{r}
# SE
se <- sqrt(
  ((experimental_result$sd[1]) ^ 2 / experimental_result$obs[1])
  + ((experimental_result$sd[2]) ^ 2 / experimental_result$obs[2])
)
```

```{r}
# 95% CI
list(
  diff(experimental_result$empRate78) + 1.96 * se,
  diff(experimental_result$empRate78) - 1.96 * se
)
```

```{r}
rm(se)
```

# Question 3

## a

```{r}
cps_controls <- read_dta("https://users.nber.org/~rdehejia/data/cps_controls.dta")
```

## b

```{r}
cps_controls <- cleanup(cps_controls)
```

## c

```{r}
composite <- experimental |>
  filter(treat == "treated") |>
  bind_rows(cps_controls)
```

## d

```{r}
composite |>
  datasummary_balance(~ treat, data = _)
```

## e

Characteristics are unbalanced across groups. Without randomisation, the naive difference in means no longer identifies ATE.

# Question 4

## a

```{r}
composite
```

```{r}
summary(lm(earnings78 ~ . , data = composite))
```

## b

Conditions:

1.  selection on observables
2.  homogeneous treatment effects

## c

$$\mathbb{E}\left[ Y|D,X \right] = \alpha_{D} + X^{T}\beta_{D} $$

$$\begin{align}
ATE  & =  \mathbb{E}\left[ Y_{1}- Y_{0} \right] \\
 & = \mathbb{E}\left[  \mathbb{E}\left[ Y_{1}- Y_{0} |X\right] |X \right] \\
 & = \mathbb{E}\left[ [\alpha_{1} - \alpha_{0} + X(\beta_{1} - \beta_{0}) ]|X\right] \\
 & = \alpha_{1}- \alpha_{0} + \mathbb{E}\left[ X \right] ^{T}(\beta_{1}- \beta_{0})
\end{align}$$

Regression: - Estimate regression $Y = \alpha + X^{T}\beta$ for the control and treated group separately and get $\widehat{ \alpha_{0} }, \widehat{ \alpha_{1} }, \widehat{ \beta_{0} }, \widehat{ \beta_{1} }$ - Compute$$\widehat{ ATE } = \widehat{ \alpha_{1} } - \widehat{ \alpha_{0} } + \overline{X}^{T} \left( \widehat{ \beta_{1} } - \widehat{ \beta_{0} } \right) $$

This accounts for heterogeneity in treatment effects varying across $X$.

# Question 5

```{r}
logit_data <- composite |>
  mutate(treatment_binary = ifelse(treat == "treated", 1, 0))
```

```{r}
propensity_score_fit <- glm(treatment_binary ~ . - treat - employment78,
    family = binomial(link = "logit"),
    data = logit_data)
  
summary(propensity_score_fit)
```

```{r}
logit_data_augmented <- augment(propensity_score_fit, type.predict = "response")
```

## b

```{r}
propScore_treated_hist <- logit_data_augmented |>
  filter(treat == "treated") |>
  ggplot(aes(x = .fitted)) +
  geom_histogram(fill = "red", alpha = 0.3)

propScore_untreated_hist <- logit_data_augmented |>
  filter(treat == "control") |>
  ggplot(aes(x = .fitted)) +
  geom_histogram(fill = "blue", alpha = 0.3)

propScore_treated_hist + propScore_untreated_hist
```

The control group has a distribution strongly skewed to the left, accumulating around 0 while the distribution for the treated is more dispersed.

The control group also has a much larger sample size.

## c

```{r}
logit_data_augmented <- logit_data_augmented |>
  mutate(w1 = treatment_binary / .fitted,
         w0 = (1 - treatment_binary) / (1 - .fitted)) |>
  mutate(employment78_binary = ifelse(employment78 == "employed", 1, 0))

logit_data_augmented |>
  summarise(mean(w1 * employment78_binary) - mean(w0 * employment78_binary)) |>
  pull()
```

## d

```{r}
logit_data_augmented |>
  filter(0.1 < .fitted & .fitted < 0.9) |>
  summarise(mean(w1 * employment78_binary) - mean(w0 * employment78_binary)) |>
  pull()
```

## e

When the propensity score is very small (around 0), the weight $w_1$ will be super large, and the same logic applies to very large propensity scores â€” then they are around 1, $w_1$ gets super large. Those distort our estimation of ATE.
